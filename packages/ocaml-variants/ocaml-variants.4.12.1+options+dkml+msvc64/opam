# Based on https://raw.githubusercontent.com/fdopen/opam-repository-mingw/opam2/packages/ocaml-variants/ocaml-variants.4.12.0%2Bmsvc64/opam
# and https://github.com/ocaml/opam-repository/tree/master/packages/ocaml-variants/ocaml-variants.4.12.0%2Boptions
# with tweaks so works with MSYS2 rather than Cygwin.
# Also, since ocaml-option-32bit is hardcoded to `available: [ arch = "x86_64" & (os = "linux" | os = "macos") ]` we use different
# options files to select 32bit vs 64bit rather than use options.
opam-version: "2.0"
synopsis: "OCaml 4.12.1 (options + Diskuv OCaml 0.4.0-prerel3 + 64-bit MSVC)"
maintainer: "[Diskuv, Inc. <support@diskuv.com>]"
authors: "Xavier Leroy and many contributors"
homepage: "https://ocaml.org"
bug-reports: "https://gitlab.com/diskuv/diskuv-ocaml/-/issues"
dev-repo: "git://github.com/ocaml/ocaml"
depends: [
  "ocaml" {= "4.12.1" & post}
  "base-unix" {post}
  "base-bigarray" {post}
  "base-threads" {post}
]
conflict-class: "ocaml-core-compiler"
flags: compiler
setenv: [
  [OCAMLLIB = "%{prefix}%\\lib\\ocaml"]
  [CAML_LD_LIBRARY_PATH = "%{lib}%/stublibs"]
  [CC = "cl.exe"]
]
build: [
  # This used to be:
  #   ["./configure" "--prefix=%{prefix}%" "--host=x86_64-pc-windows"]
  # That --prefix is used to run `ocaml/tools/Makefile`'s (https://github.com/ocaml/ocaml/blob/b7651b57424cafc4c4a1e52893e7143e64f890ae/tools/Makefile#L146-L152):
  #   ocamlmklibconfig.ml: $(ROOTDIR)/Makefile.config Makefile
  #        (echo 'let bindir = "$(BINDIR)"'; \
  # And bash would error out with:
  #   1 | let bindir = "C:\Usersser\.opam.12/bin"
  #   Error (warning 14 [illegal-backslash]): illegal backslash escape in string.
  # because --prefix is a pure Windows path containing backslashes.
  # Now we use `cygpath -am` to convert it to a C:/Users/user/... path that is portable.
  [
    "dash" "-eufx"
    "./configure-with-cygpath-prefix.sh"
    "%{prefix}%"
    "--with-afl" {ocaml-option-afl:installed}
    "--disable-native-compiler" {ocaml-option-bytecode-only:installed}
    "--disable-force-safe-string" {ocaml-option-default-unsafe-string:installed}
    "DEFAULT_STRING=unsafe" {ocaml-option-default-unsafe-string:installed}
    "--disable-flat-float-array" {ocaml-option-no-flat-float-array:installed}
    "--enable-flambda" {ocaml-option-flambda:installed}
    "--enable-spacetime" {ocaml-option-spacetime:installed}
    "--disable-naked-pointers" {ocaml-option-nnp:installed}
    "--enable-naked-pointers-checker" {ocaml-option-nnpchecker:installed}
    # The --host might be better if we say we are MSYS2 or pretend we are MinGW since many packages do ./configure
    # based on --host parsing.
    # MSYS2 toolchains: https://www.msys2.org/wiki/MSYS2-introduction/#subsystems
    #                   https://github.com/msys2-contrib/mingw-w64/blob/master/mingw-w64-doc/howto-build/mingw-w64-howto-build.txt
    # MinGW toolchains: https://sourceforge.net/p/mingw-w64/wiki2/TypeTriplets/
    #
    # For now --host is chosen the same as fdopen@'s repository, which is important
    # also because it is used by the OCaml compiler to select libraries:
    # https://github.com/ocaml/ocaml/blob/672965bfda6220c690d26ff6a0b7a9a59519d9af/configure.ac#L1962-L1964
    "--host=x86_64-pc-windows"
  ]
  [make "SHELL=/bin/dash" "flexdll"]
  [make "SHELL=/bin/dash" "-j%{jobs}%" "world.opt"]
  [make "SHELL=/bin/dash" "flexlink.opt"]
]
install: [
  [make "SHELL=/bin/dash" "install"]
  # This used to be:
  #    ["dash" "-exc" "echo \"%{lib}%/stublibs\"  >> \"%{lib}%/ocaml/ld.conf\""]
  # which would expand to:
  #    dash.exe -exc "echo 'C:\Users\user\.opam\4.12\lib/stublibs'""  >> 'C:\Users\user\.opam\4.12\lib/ocaml/ld.conf'
  # For Opam installed packages (in the future) the left-hand side (the path to stublibs) should be
  # Windows portable (ex. C:/Users/.../stublibs).
  #
  ["dash" "-exc" "cygpath -am '%{lib}%/stublibs' >> '%{lib}%/ocaml/ld.conf'"]
]
depopts: [
  "ocaml-option-afl"
  "ocaml-option-bytecode-only"
  "ocaml-option-default-unsafe-string"
  "ocaml-option-no-flat-float-array"
  "ocaml-option-flambda"
  "ocaml-option-static"
]
patches: ["ocaml-4.12.0+beta1.patch" "inline-flexdll.patch"]
url {
  src: "https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz"
  checksum: "sha512=e942e5cf5530804690ec45c40936ad2acbb60e11279fc676e0f04181fe1855f84ee5c3cb9c337fc5d01f6ee0e7b2251a6c04f7de56d99c20bb62026dff6c5671"
}
extra-source "ocaml-4.12.0+beta1.patch" {
  src:
    "https://gist.githubusercontent.com/fdopen/665421b0ba046cc970e2266b2b246cb2/raw/21279bc217879a9771bf4ef09e213664bdebaef5/ocaml-4.12.0+beta1.patch"
  checksum: "sha512=797a865a1e5512ca9d44ec73599eec86f5c83707075ec93a85fd86eea4bdd9a7556c839cd3b1028ead842ec33a8a60ae554caf38edb98d8aeebd814f2d6358ac"
}
extra-source "inline-flexdll.patch" {
  src:
    "https://gist.githubusercontent.com/fdopen/fdc645a61a208552ebac76a67eafd3ee/raw/9f521e91c8f0e9490652651ccdbfae88da701919/inline-flexdll.patch"
  checksum: "sha512=c62b6725b14e37f7d98e45c3c7308dacb292830bac293eb4b13fe3b1f0cfc035a14315433cf58defd485845e5cb738f7d1f050b416a0052b176d5b276e40a560"
}
